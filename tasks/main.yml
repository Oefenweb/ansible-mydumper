---
# tasks file for mydumper
- name: install dependencies
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: true
  with_items: mydumper_dependencies
  when: mydumper_dependencies
  tags: [configuration, mydumper, mydumper-dependencies]

  # see http://blog.tersmitten.nl/how-to-install-mydumper-on-ubuntu-12-04-in-combination-with-percona-server.html
- name: check (libmysqlclient_r.so) symlink
  shell: "test -f $(readlink libmysqlclient_r.so)"
  args:
    chdir: "/usr/lib"
  register: check_symlink
  failed_when: False
  changed_when: False
  tags: [configuration, mydumper, mydumper-install]

- name: create (libmysqlclient_r.so) symlink
  shell: "ln -sf libmysqlclient.so libmysqlclient_r.so"
  args:
    chdir: "/usr/lib"
  when: check_symlink.rc != 0
  tags: [configuration, mydumper, mydumper-install]

- name: create (download) directory
  file:
    path: /var/lib/ansible/mydumper/downloads
    state: directory
    owner: root
    group: root
    mode: 0755
  tags: [configuration, mydumper, mydumper-download ]

- name: download
  get_url:
    url: "{{ mydumper_version.url }}"
    dest: "/var/lib/ansible/mydumper/downloads/mydumper-{{ mydumper_version.number }}.tar.gz"
    owner: root
    group: root
    mode: 0644
  tags: [configuration, mydumper, mydumper-download]

- name: create (builds) directory
  file:
    path: /var/lib/ansible/mydumper/builds
    state: directory
    owner: root
    group: root
    mode: 0755
  tags: [configuration, mydumper, mydumper-install ]

- name: extract source
  shell: "tar -xzvf /var/lib/ansible/mydumper/downloads/mydumper-{{ mydumper_version.number }}.tar.gz"
  args:
    chdir: /var/lib/ansible/mydumper/builds
    creates: "/var/lib/ansible/mydumper/builds/mydumper-{{ mydumper_version.number }}"
  tags: [configuration, mydumper, mydumper-install]

  # see http://stackoverflow.com/a/25871286
- name: create (build) directory
  file:
    path: "/var/lib/ansible/mydumper/builds/mydumper-{{ mydumper_version.number }}/build"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: ansible_local is not defined or ansible_local.mydumper is not defined or ansible_local.mydumper.version is not defined or ansible_local.mydumper.version.number is not defined or ansible_local.mydumper.version.number is defined and ansible_local.mydumper.version.number | version_compare(mydumper_version.number, '!=')
  tags: [configuration, mydumper, mydumper-install ]

- name: build source
  shell: "cmake ../ -DCMAKE_INSTALL_PREFIX={{ mydumper_install_prefix }} && make && make install"
  args:
    chdir: "/var/lib/ansible/mydumper/builds/mydumper-{{ mydumper_version.number }}/build"
  when: ansible_local is not defined or ansible_local.mydumper is not defined or ansible_local.mydumper.version is not defined or ansible_local.mydumper.version.number is not defined or ansible_local.mydumper.version.number is defined and ansible_local.mydumper.version.number | version_compare(mydumper_version.number, '!=')
  tags: [configuration, mydumper, mydumper-install]

- name: remove (build) directory
  file:
    path: "/var/lib/ansible/mydumper/builds/mydumper-{{ mydumper_version.number }}/build"
    state: absent
  when: ansible_local is not defined or ansible_local.mydumper is not defined or ansible_local.mydumper.version is not defined or ansible_local.mydumper.version.number is not defined or ansible_local.mydumper.version.number is defined and ansible_local.mydumper.version.number | version_compare(mydumper_version.number, '!=')
  tags: [configuration, mydumper, mydumper-install ]

- name: create (local facts) directory
  file:
    path: /etc/ansible/facts.d/
    state: directory
    owner: root
    group: root
    mode: 0755
  tags: [configuration, mydumper, mydumper-facts]

- name: set local facts
  template:
    src: etc/ansible/facts.d/mydumper.fact.j2
    dest: /etc/ansible/facts.d/mydumper.fact
    owner: root
    group: root
    mode: 0644
  tags: [configuration, mydumper, mydumper-facts]

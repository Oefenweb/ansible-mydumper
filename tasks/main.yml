# tasks file for mydumper
---
- name: install dependencies
  apt:
    name: "{{ mydumper_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
  tags:
    - configuration
    - mydumper
    - mydumper-dependencies

# See http://blog.tersmitten.nl/how-to-install-mydumper-on-ubuntu-12-04-in-combination-with-percona-server.html
- name: check (libmysqlclient_r.so) symlink
  shell: >
    test -f $(readlink libmysqlclient_r.so)
  args:
    chdir: /usr/lib
  register: _check_symlink
  failed_when: false
  changed_when: false
  tags:
    - configuration
    - mydumper
    - mydumper-install

- name: create (libmysqlclient_r.so) symlink
  shell: >
    ln -sf libmysqlclient.so libmysqlclient_r.so
  args:
    chdir: /usr/lib
    warn: false
  when: _check_symlink.rc != 0
  tags:
    - configuration
    - mydumper
    - mydumper-install

- name: create (mysql_config) symlink
  shell: >
    true
    && [ -x mariadb_config ]
    && [ ! -x mysql_config ]
    && ln -sf mariadb_config mysql_config
  args:
    chdir: /usr/bin
    warn: false
  failed_when: false
  changed_when: false
  tags:
    - configuration
    - mydumper
    - mydumper-install

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ mydumper_downloads_path }}"
    - "{{ mydumper_builds_path }}"
  tags:
    - configuration
    - mydumper
    - mydumper-directories

- name: download
  get_url:
    url: "{{ mydumper_version.url }}"
    dest: "{{ mydumper_downloads_path }}/mydumper-{{ mydumper_version.number }}.tar.gz"
    owner: root
    group: root
    mode: 0644
  tags:
    - configuration
    - mydumper
    - mydumper-download

- name: extract source
  shell: >
    tar -xzvf {{ mydumper_downloads_path }}/mydumper-{{ mydumper_version.number }}.tar.gz
  args:
    chdir: "{{ mydumper_builds_path }}"
    creates: "{{ mydumper_builds_path }}/mydumper-{{ mydumper_version.number }}"
    warn: false
  tags:
    - configuration
    - mydumper
    - mydumper-install

- block:

    # See http://stackoverflow.com/a/25871286
    - name: create (build) directory
      file:
        path: "{{ mydumper_builds_path }}/mydumper-{{ mydumper_version.number }}/build"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: build source
      shell: >
        true
        && cmake ../ -DCMAKE_INSTALL_PREFIX={{ mydumper_install_prefix }}
        && make
        && make install
      args:
        chdir: "{{ mydumper_builds_path }}/mydumper-{{ mydumper_version.number }}/build"

    - name: remove (build) directory
      file:
        path: "{{ mydumper_builds_path }}/mydumper-{{ mydumper_version.number }}/build"
        state: absent

  when: >
    ansible_local is not defined
    or ansible_local.mydumper is not defined
    or ansible_local.mydumper.version is not defined
    or ansible_local.mydumper.version.number is not defined
    or ansible_local.mydumper.version.number is defined
    and ansible_local.mydumper.version.number is version(mydumper_version.number, '!=')
  tags:
    - configuration
    - mydumper
    - mydumper-install

- name: create (local facts) directory
  file:
    path: "{{ mydumper_facts_file | dirname }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - configuration
    - mydumper
    - mydumper-facts

- name: set local facts
  template:
    src: "{{ mydumper_facts_file.lstrip('/') }}.j2"
    dest: "{{ mydumper_facts_file }}"
    owner: root
    group: root
    mode: 0644
  tags:
    - configuration
    - mydumper
    - mydumper-facts
